# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Integration Testing
# This workflow is triggered on push to branches that begins with a number (issue-branches)

on:
  workflow_call:
    inputs:
      context:
        description: 'Context for the status check'
        required: false
        type: string
        default: 'Integration tests'

permissions:
  statuses: write

jobs:
  integration_test:
    name: Integration tests
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install uv and gh dependencies
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv venv
          uv sync --extra dev

          gh extension install thetechcollective/gh-set-status --pin stable

      - name: Generate GitHub App installation token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.QA_RUNNER_APP_ID }}
          private-key: ${{ secrets.QA_RUNNER_SECRET }}
          owner: gh-tt-qa
          permission-organization-projects: admin
          permission-administration: write
          permission-issues: write
          permission-contents: write

      - name: Install gh-tt extension
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          gh extension install .

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Configure Git
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token  .outputs.app-slug }}[bot]@users.noreply.github.com'
          git config --global url.'https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/'.insteadOf 'https://github.com/'
      
      - name: Run integration tests
        id: tests
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          QA_ORGANIZATION_ID: ${{ vars.QA_ORG_ID }}
        run: |
          uv run pytest -m integration

      - name: Report status
        id: integration-tests
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: always()
        run: |
          if [ ${{ steps.tests.outcome }} == 'success' ]; then
            gh set-status success "All integration tests passed" "${{ inputs.context }}"
          else
            gh set-status failure "Some integration tests failed" "${{ inputs.context }}"
            exit 1
          fi
